#
# This is a sample configuration. It illustrates how to separate static objects
# traffic from dynamic traffic, and how to dynamically regulate the server load.
#
# It listens on 192.168.1.10:80, and directs all requests for Host 'img' or
# URIs starting with /img or /css to a dedicated group of servers. URIs
# starting with /admin/stats deliver the stats page.
#

# The public 'www' address in the DMZ
global
        debug

frontend public
        bind            127.0.0.1:8080 name clear
        mode            http
        timeout client  30s
        default_backend dynamic

# the application servers go here
backend dynamic
        mode            http
        option          http-buffer-request
        balance         body_param_pattern {.*\"user\"\s*:\s*{.*\"id\"\s*:\s*\"([A-Z0-9-]*)\",.*
        hash-type       consistent
        http-request    set-log-level debug 
        timeout connect 5s
        timeout server  30s
        timeout queue   200ms
        server          dynsrv1 127.0.0.1:10002 
        server          dynsrv2 127.0.0.1:10003
